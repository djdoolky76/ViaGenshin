package mapper

var AbilityInvokeArguments = map[uint32]string{
	1:   "AbilityMetaModifierChange",                                // ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1;
	2:   "",                                                         // ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;
	3:   "AbilityMetaSpecialFloatArgument",                          // ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3;
	4:   "AbilityScalarValueEntry",                                  // ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4;
	5:   "AbilityString",                                            // ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5;
	6:   "AbilityMetaReInitOverrideMap",                             // ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6;
	7:   "AbilityScalarValueEntry",                                  // ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7;
	8:   "AbilityString",                                            // ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;
	9:   "AbilityFloatValue",                                        // ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9;
	10:  "",                                                         // ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;
	11:  "AbilityMetaSetKilledState",                                // ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE = 11;
	12:  "",                                                         // ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12;
	13:  "AbilityMetaAddAbility",                                    // ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13;
	14:  "",                                                         // ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14;
	15:  "AbilityMetaSetModifierApplyEntityId",                      // ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15;
	16:  "AbilityMetaModifierDurabilityChange",                      // ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16;
	17:  "AbilityMetaElementReactionVisual",                         // ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17;
	18:  "AbilityMetaSetPoseParameter",                              // ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18;
	19:  "AbilityMetaUpdateBaseReactionDamage",                      // ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19;
	20:  "AbilityMetaTriggerElementReaction",                        // ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20;
	21:  "AbilityMetaLoseHp",                                        // ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21;
	22:  "AbilityMetaDurabilityIsZero",                              // ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO = 22;
	50:  "AbilityActionTriggerAbility",                              // ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50;
	51:  "AbilityActionSetCrashDamage",                              // ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51;
	52:  "",                                                         // ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52;
	53:  "AbilityActionSummon",                                      // ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53;
	54:  "AbilityActionBlink",                                       // ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54;
	55:  "AbilityActionCreateGadget",                                // ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55;
	56:  "AbilityApplyLevelModifier",                                // ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56;
	57:  "AbilityActionGenerateElemBall",                            // ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57;
	58:  "AbilityActionSetRandomOverrideMapValue",                   // ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58;
	59:  "AbilityActionServerMonsterLog",                            // ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59;
	60:  "AbilityActionCreateTile",                                  // ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60;
	61:  "AbilityActionDestroyTile",                                 // ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61;
	62:  "AbilityActionFireAfterImage",                              // ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62;
	63:  "AbilityActionDeductStamina",                               // ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA = 63;
	64:  "AbilityActionHitEffect",                                   // ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT = 64;
	65:  "AbilityActionSetBulletTrackTarget",                        // ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET = 65;
	66:  "",                                                         // ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT = 66;
	100: "AbilityMixinAvatarSteerByCamera",                          // ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100;
	101: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101;
	102: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102;
	103: "AbilityMixinCostStamina",                                  // ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103;
	104: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104;
	105: "AbilityMixinElementShield",                                // ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105;
	106: "AbilityMixinGlobalShield",                                 // ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106;
	107: "AbilityMixinShieldBar",                                    // ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107;
	108: "AbilityMixinWindSeedSpawner",                              // ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108;
	109: "AbilityMixinDoActionByElementReaction",                    // ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109;
	110: "AbilityMixinFieldEntityCountChange",                       // ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110;
	111: "AbilityMixinScenePropSync",                                // ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111;
	112: "AbilityMixinWidgetMpSupport",                              // ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112;
	113: "AbilityMixinDoActionBySelfModifierElementDurabilityRatio", // ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO = 113;
	114: "AbilityMixinFireworksLauncher",                            // ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER = 114;
	115: "AttackResultCreateCount",                                  // ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT = 115;
	116: "AbilityMixinUGCTimeControl",                               // ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL = 116;
	117: "AbilityMixinAvatarCombat",                                 // ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT = 117;
	118: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN = 118;
	119: "AbilityMixinUIInteract",                                   // ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT = 119;
	120: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA = 120;
	121: "AbilityMixinEraseBrickActivity",                           // ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY = 121;
	122: "AbilityMixinBreakout",                                     // ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT = 122;
	123: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV = 123;
	124: "",                                                         // ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV = 124;
}

var CombatTypeArguments = map[uint32]string{
	1:  "EvtBeingHitInfo",             // COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT = 1;
	2:  "EvtAnimatorStateChangedInfo", // COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED = 2;
	3:  "EvtFaceToDirInfo",            // COMBAT_TYPE_ARGUMENT_FACE_TO_DIR = 3;
	4:  "EvtSetAttackTargetInfo",      // COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET = 4;
	5:  "EvtRushMoveInfo",             // COMBAT_TYPE_ARGUMENT_RUSH_MOVE = 5;
	6:  "EvtAnimatorParameterInfo",    // COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED = 6;
	7:  "EntityMoveInfo",              // COMBAT_TYPE_ARGUMENT_ENTITY_MOVE = 7;
	8:  "EvtSyncEntityPositionInfo",   // COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION = 8;
	9:  "EvtCombatSteerMotionInfo",    // COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO = 9;
	10: "EvtCombatForceSetPosInfo",    // COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO = 10;
	11: "EvtCompensatePosDiffInfo",    // COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF = 11;
	12: "EvtMonsterDoBlink",           // COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK = 12;
	13: "EvtFixedRushMove",            // COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE = 13;
	14: "EvtSyncTransform",            // COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM = 14;
	15: "EvtLightCoreMove",            // COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE = 15;
	16: "EvtBeingHealedNotify",        // COMBAT_TYPE_ARGUMENT_BEING_HEALED_NTF = 16;
	17: "EvtSyncSkillAnchorPosition",  // COMBAT_TYPE_ARGUMENT_SKILL_ANCHOR_POSITION_NTF = 17;
	18: "EvtGrapplingHookMove",        // COMBAT_TYPE_ARGUMENT_GRAPPLING_HOOK_MOVE = 18;
}
